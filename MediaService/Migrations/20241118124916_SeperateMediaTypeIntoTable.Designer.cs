// <auto-generated />
using MediaService.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace MediaService.Migrations
{
    [DbContext(typeof(MediaServiceDbContext))]
    [Migration("20241118124916_SeperateMediaTypeIntoTable")]
    partial class SeperateMediaTypeIntoTable
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("MediaService.Models.MediaItem", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ImageUrl")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("MediaTypeId")
                        .HasColumnType("int");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("MediaTypeId");

                    b.ToTable("MediaItems");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Description = "An example book description.",
                            ImageUrl = "https://example.com/images/book.jpg",
                            MediaTypeId = 1,
                            Title = "Example Book"
                        },
                        new
                        {
                            Id = 2,
                            Description = "An example DVD description.",
                            ImageUrl = "https://example.com/images/dvd.jpg",
                            MediaTypeId = 2,
                            Title = "Example DVD"
                        });
                });

            modelBuilder.Entity("MediaService.Models.MediaType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("MediaTypes");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "Book"
                        },
                        new
                        {
                            Id = 2,
                            Name = "DVD"
                        },
                        new
                        {
                            Id = 3,
                            Name = "Game"
                        },
                        new
                        {
                            Id = 4,
                            Name = "Journal"
                        },
                        new
                        {
                            Id = 5,
                            Name = "Multimedia"
                        });
                });

            modelBuilder.Entity("MediaService.Models.MediaItem", b =>
                {
                    b.HasOne("MediaService.Models.MediaType", "MediaType")
                        .WithMany()
                        .HasForeignKey("MediaTypeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("MediaType");
                });
#pragma warning restore 612, 618
        }
    }
}
